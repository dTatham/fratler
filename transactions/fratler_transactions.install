<?php
// vim:fenc=utf-8:ft=php:ai:si:ts=2:sw=2:et:nu:fdm=indent:fdn=1:

function fratler_transactions_schema() {
  $schema = array();

  $schema['fratler_transactions_ttypes'] = array(
    'fields' => array(
      'ttid'  => array(
        'type'  => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The consecutive Transaction Type-ID.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => 64,
        'description' => 'The category name which is exported by hook_ft_ttypes.',
        'not null' => TRUE,
      ),
      'name' => array(
        'type'  => 'varchar',
        'length' => 16,
        'description' => 'The name of the transaction type.',
        'not null' => TRUE,
      ),
      'description' => array(
        'type'  => 'varchar',
        'length' => 128,
        'description' => 'The name of the transaction type.',
        'not null' => TRUE,
      ),
      'active' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'locked' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'description' => 'If 1, this transaction type cannot be edited (only localized).',
      ),
    ),

    'indexes' => array(
      'idx_act'  => array('active'),
      'idx_cat'  => array('category'),
      'idx_lck'  => array('locked'),
      ),
    'primary key' => array('ttid'),
    'description' => 'Holds all Fratler Transaction Types',
    );
  $schema['fratler_transactions'] = array(
      'fields' => array(
        'tid'  => array(
          'type'    => 'serial',
          'unsigned'  => true,
          'not null'  => true,
          'description'  => 'The consecutive transaction-ID',
          'size'    => 'big',
          ),
        'ttype'  => array(
          'type'    => 'int',
          'length'  => 5,
          'description'  => 'Taxonomy-reference to the nature of transaction',
          ),
        'rid'  => array(
          'type'    => 'int',
          'length'  => 5,
          'unsigned'  => false,
          'description'  => 'The userID of the recipient (negative values reserved for master-accounts)',
          ),
        'sid'  => array(
          'type'    => 'int',
          'length'  => 5,
          'unsigned'  => false,
          'description'  => 'The userID of the sender (negative values reserved for master-accounts)',
          ),
        'iid'  => array(
          'type'    => 'int',
          'length'  => 5,
          'unsigned'  => false,
          'description'  => 'The userID of the initiator (if it was a 3rd party transaction)',
          ),
        'txt'  => array(
          'type'    => 'text',
          'description'  => 'A note that goes with the transaction',
          ),
        'amount' => array(
          'type'    => 'numeric',
          'precision'  => 15,
          'scale'    => 2,
          'not null'  => true,
          'unsigned'  => false,
          'description'  => 'The amount... d\'uh',
          ),
        'balance' => array(
          'type'    => 'numeric',
          'precision'  => 15,
          'scale'    => 2,
          'unsigned'  => false,
          'description'  => 'The new balance of the recipient',
          ),
        'tstamp' => array(
          'type'    => 'int',
          'description'  => 'The UNIX-Timestamp of the transaction',
          ),
        'signature' => array(
          'type'    => 'blob',
          'description'  => 'The binary representation of the transaction-signature',
          ),
        ),

        'indexes' => array(
          'idx_tstamp'  => array('tstamp'),
          'idx_rid'  => array('rid'),
          'idx_sid'  => array('sid'),
          'idx_iid'  => array('iid'),
          ),
        'primary key' => array('tid'),
        'description' => 'Holds all transactional data since the last archive-run',
        );
  return $schema;
}

function fratler_transactions_install() {
  $ttype = (object) array(
    'ttid'  => 0,
    'category' => 'transfer',
    'name'  => 'T',
    'description' => 'Standard Transfer',
    'active' => 1,
    'locked' => 1,
  );
  drupal_write_record('fratler_transactions_ttypes', $ttype);
  variable_set('ft_default_transfer', $ttype->ttid);
  // Have the terms triggered for translation.
  t('T', array(), array('context' => 'Abbreviation for Standard Transfer'));
  t('Standard Transfer');

  $ttype = (object) array(
    'ttid'  => 0,
    'category' => 'deposit',
    'name'  => 'D',
    'description' => 'Deposit',
    'active' => 1,
    'locked' => 1,
  );
  drupal_write_record('fratler_transactions_ttypes', $ttype);
  variable_set('ft_default_deposit', $ttype->ttid);
  // Have the terms triggered for translation.
  t('D', array(), array('context' => 'Abbreviation for Deposit'));
  t('Deposit');

  $ttype = (object) array(
    'ttid'  => 0,
    'category' => 'withdrawal',
    'name'  => 'W',
    'description' => 'Withdrawal',
    'active' => 1,
    'locked' => 1,
  );
  drupal_write_record('fratler_transactions_ttypes', $ttype);
  variable_set('ft_default_withdrawal', $ttype->ttid);
  // Have the terms triggered for translation.
  t('W', array(), array('context' => 'Abbreviation for Withdrawal'));
  t('Withdrawal');


  variable_set('ft_trans_max', 10);
  variable_set('ft_overdraw_limit', 0);

  drupal_set_message(t('Please remember seting the !permissions and !rebuild the Fratler Account table afterwards to enable Fratler Accounts. You can also find the link in the !admin configuration.', array(
                        '!permissions' => l(t('permissions'), 'admin/people/permissions', array('query' => drupal_get_destination())),
                        '!rebuild' => l(t('rebuild'), 'admin/config/fratler/accounts/recreate_accounts', array('fragment' => 'module-fratler_accounts', 'query' => drupal_get_destination())),
      '!admin' => l('Fratler Accounts', 'admin/config/fratler/accounts'))),
    'warning');
}

function fratler_transactions_enable() {
  // TODO Update account balance after fratler_transactions has been enabled (issue #13)
}


function fratler_transactions_uninstall() {
  variable_del('ft_default_transfer');
  variable_del('ft_default_withdraw');
  variable_del('ft_default_deposit');

  variable_del('ft_trans_max');
  variable_del('ft_overdraw_limit');

}
